name: CI

on:
  push:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      working-directory: "Exam"
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Git clone my repo
      uses: actions/checkout@v3
    
#    - name: ls -l
#      run: |
#        ls -l
#        cd Exam
#        ls -l
      
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

#    - name: Login to Amazon ECR
#     id: login-ecr
#      uses: aws-actions/amazon-ecr-login@v1

#    - name: Build, tag, and push the image to Amazon ECR
#     id: build-image
#    env:
#        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#        ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
#        IMAGE_TAG: "latest"

#      run: |
#        # Build a docker container and push it to ECR 
#        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
#        echo "Pushing image to ECR..."
#        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Terraform init
      run: terraform init
      working-directory: ${{ env.working-directory }}

    - name: TF
      run: terraform apply
      working-directory: ${{ env.working-directory }}

        
